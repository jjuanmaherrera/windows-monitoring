
[[inputs.win_perf_counters]]
  ## Processor usage, alternative to native, reports on a per core.
    [[inputs.win_perf_counters.object]]
        Measurement = "win_cpu"
        ObjectName = "Processor"
        Instances = ["*"]
        IncludeTotal = true
        Counters = [
            "% Idle Time",
            "% Interrupt Time",
            "% Privileged Time",
            "% User Time",
            "% Processor Time",
            "% DPC Time",
        ]


  ## Disk times and queues
    [[inputs.win_perf_counters.object]]
        Measurement = "win_disk"
        ObjectName = "LogicalDisk"
        Instances = ["*"]
        IncludeTotal = true
        Counters = [
            "% Idle Time",
            "% Disk Time",
            "% Disk Read Time",
            "% Disk Write Time",
            "% User Time",
            "% Free Space",
            "Current Disk Queue Length",
            "Free Megabytes",
        ]
    
    [[inputs.win_perf_counters.object]]
        Measurement = "win_diskio"
        ObjectName = "PhysicalDisk"
        Instances = ["*"]
        IncludeTotal = true
        Counters = [
            "Disk Read Bytes/sec",
            "Disk Write Bytes/sec",
            "Current Disk Queue Length",
            "Disk Reads/sec",
            "Disk Writes/sec",
            "% Disk Time",
            "% Disk Read Time",
            "% Disk Write Time",
        ]

    [[inputs.win_perf_counters.object]]
        Measurement = "win_net"
        ObjectName = "Network Interface"
        Instances = ["*"]
        Counters = [
            "Bytes Received/sec",
            "Bytes Sent/sec",
            "Packets Received/sec",
            "Packets Sent/sec",
            "Packets Received Discarded",
            "Packets Outbound Discarded",
            "Packets Received Errors",
            "Packets Outbound Errors",
        ]

    [[inputs.win_perf_counters.object]]
        Measurement = "win_system"
        ObjectName = "System"
        Instances = ["------"]
        Counters = [ 
        #   "Context Switches/sec",
        #   "System Calls/sec",
        #   "Processor Queue Length",
            "System Up Time",
        ]

  ## Example counterPath where the Instance portion must be removed to get
  ## data back, such as from the Memory object.
    [[inputs.win_perf_counters.object]]
        Measurement = "win_mem"
        ObjectName = "Memory"
        ## Use 6 x - to remove the Instance bit from the counterPath.
        Instances = ["------"]
        Counters = [
        "Available Bytes",
        "Cache Faults/sec",
        "Demand Zero Faults/sec",
        "Page Faults/sec",
        "Pages/sec",
        "Transition Faults/sec",
        "Pool Nonpaged Bytes",
        "Pool Paged Bytes",
        "Standby Cache Reserve Bytes",
        "Standby Cache Normal Priority Bytes",
        "Standby Cache Core Bytes",
        ]

[[inputs.win_wmi]]
    name_override = "win_mem"
    #Measurement = "win_mem"
    [[inputs.win_wmi.query]]
    ## Namespace, class and a list of properties to use in the WMI query
        namespace = "root\\cimv2"
        class_name = "Win32_ComputerSystem"
        properties = ["TotalPhysicalMemory"]
